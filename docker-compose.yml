services:
  api:
    image: node:18
    container_name: api
    restart: always
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - '3000:3000'
    command: npm run start:dev
    environment:
      - NODE_ENV=development
    networks:
      - app_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    restart: always
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=${POSTGRES_KEYCLOAK_TYPE}
      - KC_DB_URL_HOST=${POSTGRES_KEYCLOAK_HOST}
      - KC_DB_URL_DATABASE=${POSTGRES_KEYCLOAK_DB}
      - KC_DB_USERNAME=${POSTGRES_KEYCLOAK_USER}
      - KC_DB_PASSWORD=${POSTGRES_KEYCLOAK_PASSWORD}
    ports:
      - '8080:8080'
    networks:
      - app_network
    depends_on:
      - postgres_keycloak
    volumes:
      - ./dist_keycloak:/opt/keycloak/providers/

  postgres_api:
    image: postgres
    container_name: postgres_api
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_API_USER}
      POSTGRES_PASSWORD: ${POSTGRES_API_PASSWORD}
      POSTGRES_DB: ${POSTGRES_API_DB}
    ports:
      - '5432:5432'
    networks:
      - app_network
    volumes:
      - postgres_api_data:/var/lib/postgresql/data
    env_file:
      - .env

  postgres_keycloak:
    image: postgres
    container_name: postgres_keycloak
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_KEYCLOAK_USER}
      POSTGRES_PASSWORD: ${POSTGRES_KEYCLOAK_PASSWORD}
      POSTGRES_DB: ${POSTGRES_KEYCLOAK_DB}
    ports:
      - '5433:5432'
    networks:
      - app_network
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - '80:80'
    networks:
      - app_network
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - api
      - keycloak

volumes:
  postgres_api_data:
  postgres_keycloak_data:

networks:
  app_network:
    driver: bridge
